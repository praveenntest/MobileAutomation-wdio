{"{\"assumptions\":{},\"sourceRoot\":\"/Users/admin/mobile/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/admin/mobile\",\"filename\":\"/Users/admin/mobile/wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/admin/mobile\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.20:test":{"value":{"code":"const path = require('path');\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  port: 4723,\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/android/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // // capabilities for local Appium web tests on an Android Emulator\n    // platformName: 'Android',\n    // browserName: 'Chrome',\n    // 'appium:deviceName': 'Android GoogleAPI Emulator',\n    // 'appium:platformVersion': '12.0',\n    // 'appium:automationName': 'UiAutomator2'\n\n    'appium:platformName': 'Android',\n    'appium:platformVersion': '11.0',\n    'appium:deviceName': 'Pixel 4',\n    'appium:automationName': 'UIAutomator2',\n    'appium:app': path.join(process.cwd(), \"./app/android/ColorNote+Notepad.apk\")\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: '',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['appium'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialize specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context, hookName) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n  /**\n  * Hook that gets executed before a WebdriverIO assertion happens.\n  * @param {object} params information about the assertion to be executed\n  */\n  // beforeAssertion: function(params) {\n  // }\n  /**\n  * Hook that gets executed after a WebdriverIO assertion happened.\n  * @param {object} params information about the assertion that was executed, including its results\n  */\n  // afterAssertion: function(params) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["path","require","exports","config","runner","port","specs","exclude","maxInstances","capabilities","join","process","cwd","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"/Users/admin/mobile/","sources":["wdio.conf.js"],"sourcesContent":["const path = require('path')\n\nexports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    port: 4723,\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/android/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // // capabilities for local Appium web tests on an Android Emulator\n        // platformName: 'Android',\n        // browserName: 'Chrome',\n        // 'appium:deviceName': 'Android GoogleAPI Emulator',\n        // 'appium:platformVersion': '12.0',\n        // 'appium:automationName': 'UiAutomator2'\n\n        'appium:platformName': 'Android',\n        'appium:platformVersion': '11.0',\n        'appium:deviceName':'Pixel 4',\n        'appium:automationName': 'UIAutomator2',\n        'appium:app': path.join(process.cwd(),\"./app/android/ColorNote+Notepad.apk\")\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: '',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['appium'],\n\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    \n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialize specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context, hookName) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n    /**\n    * Hook that gets executed before a WebdriverIO assertion happens.\n    * @param {object} params information about the assertion to be executed\n    */\n    // beforeAssertion: function(params) {\n    // }\n    /**\n    * Hook that gets executed after a WebdriverIO assertion happened.\n    * @param {object} params information about the assertion that was executed, including its results\n    */\n    // afterAssertion: function(params) {\n    // }\n}\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5BC,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACfC,IAAI,EAAE,IAAI;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,2BAA2B,CAC9B;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACA;IACA;IACA;IACA;IACA;;IAEA,qBAAqB,EAAE,SAAS;IAChC,wBAAwB,EAAE,MAAM;IAChC,mBAAmB,EAAC,SAAS;IAC7B,uBAAuB,EAAE,cAAc;IACvC,YAAY,EAAET,IAAI,CAACU,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,CAAC,EAAC,qCAAqC;EAC/E,CAAC,CAAC;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,EAAE;EACX;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;EAEpB;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAEnB;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1704033815716},"{\"assumptions\":{},\"sourceRoot\":\"/Users/admin/mobile/test/specs/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/admin/mobile\",\"filename\":\"/Users/admin/mobile/test/specs/sample.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/admin/mobile\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.20:test":{"value":{"code":"describe('Sample', () => {\n  it('Samle Test', async () => {\n    await driver.pause(5000);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiZHJpdmVyIiwicGF1c2UiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9hZG1pbi9tb2JpbGUvdGVzdC9zcGVjcy8iLCJzb3VyY2VzIjpbInNhbXBsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJkZXNjcmliZSgnU2FtcGxlJywoKT0+e1xuICAgIGl0KCdTYW1sZSBUZXN0JywgYXN5bmMoKT0+e1xuICAgICAgICBhd2FpdCBkcml2ZXIucGF1c2UoNTAwMCk7XG4gICAgfSlcbn0pIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxDQUFDLFFBQVEsRUFBQyxNQUFJO0VBQ2xCQyxFQUFFLENBQUMsWUFBWSxFQUFFLFlBQVM7SUFDdEIsTUFBTUMsTUFBTSxDQUFDQyxLQUFLLENBQUMsSUFBSSxDQUFDO0VBQzVCLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["describe","it","driver","pause"],"sourceRoot":"/Users/admin/mobile/test/specs/","sources":["sample.js"],"sourcesContent":["describe('Sample',()=>{\n    it('Samle Test', async()=>{\n        await driver.pause(5000);\n    })\n})"],"mappings":"AAAAA,QAAQ,CAAC,QAAQ,EAAC,MAAI;EAClBC,EAAE,CAAC,YAAY,EAAE,YAAS;IACtB,MAAMC,MAAM,CAACC,KAAK,CAAC,IAAI,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1703783149633},"{\"assumptions\":{},\"sourceRoot\":\"/Users/admin/mobile/test/specs/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/admin/mobile\",\"filename\":\"/Users/admin/mobile/test/specs/android-findElements.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/admin/mobile\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.20:test":{"value":{"code":"describe('Android Elements Tests', () => {\n  it('Find element by accessibility id', async () => {\n    //find element by accessibility id\n    const appOption = await $('~App');\n    //click on element\n    await appOption.click();\n    //asseration\n    const actionBar = await $('~Action Bar');\n    await expect(actionBar).toBeExisting();\n  });\n  it(\"Find element by class name\", async () => {\n    const className = await $('android.widget.TextView');\n    console.log(await className.getText());\n    await expect(className).toHaveText(\"API Demos\");\n  });\n  it(\"Find element by xpath\", async () => {\n    await $('//android.widget.TextView[@content-desc=\"Alert Dialogs\"]').click();\n    await $('//android.widget.Button[@resource-id=\"io.appium.android.apis:id/select_button\"]').click();\n    await $('//android.widget.TextView[@text=\"Command two\"]').click();\n    const textAsseration = await $('//android.widget.TextView');\n    await expect(textAsseration).toHaveText(\"You selected: 1 , Command two\");\n  });\n  it('Find element by UiAutomators', async () => {\n    await $('android=new UiSelector().textContains(\"Alert\")').click();\n  });\n  it.only(\"Working with text input feild\", async () => {\n    const addOption = await $('~Views');\n    await addOption.click();\n    const addOptionAuto = await $('~Auto Complete');\n    await addOptionAuto.click();\n    await $('//android.widget.TextView[@content-desc=\"1. Screen Top\"]').click();\n    const countryInput = await $('android.widget.EditText');\n    await countryInput.waitForDisplayed({\n      timeout: 5000\n    });\n    await countryInput.click();\n    await countryInput.setValue(\"India\");\n    const enteredText = await countryInput.getText();\n    await expect(enteredText).toEqual(\"India\");\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiYXBwT3B0aW9uIiwiJCIsImNsaWNrIiwiYWN0aW9uQmFyIiwiZXhwZWN0IiwidG9CZUV4aXN0aW5nIiwiY2xhc3NOYW1lIiwiY29uc29sZSIsImxvZyIsImdldFRleHQiLCJ0b0hhdmVUZXh0IiwidGV4dEFzc2VyYXRpb24iLCJvbmx5IiwiYWRkT3B0aW9uIiwiYWRkT3B0aW9uQXV0byIsImNvdW50cnlJbnB1dCIsIndhaXRGb3JEaXNwbGF5ZWQiLCJ0aW1lb3V0Iiwic2V0VmFsdWUiLCJlbnRlcmVkVGV4dCIsInRvRXF1YWwiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9hZG1pbi9tb2JpbGUvdGVzdC9zcGVjcy8iLCJzb3VyY2VzIjpbImFuZHJvaWQtZmluZEVsZW1lbnRzLnNwZWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVzY3JpYmUoJ0FuZHJvaWQgRWxlbWVudHMgVGVzdHMnLCgpPT57XG4gICAgaXQoJ0ZpbmQgZWxlbWVudCBieSBhY2Nlc3NpYmlsaXR5IGlkJywgYXN5bmMoKT0+e1xuICAgICAgIC8vZmluZCBlbGVtZW50IGJ5IGFjY2Vzc2liaWxpdHkgaWRcbiAgICAgICAgY29uc3QgYXBwT3B0aW9uID0gYXdhaXQgJCgnfkFwcCcpO1xuICAgICAgICAvL2NsaWNrIG9uIGVsZW1lbnRcbiAgICAgICAgYXdhaXQgYXBwT3B0aW9uLmNsaWNrKClcbiAgICAgICAvL2Fzc2VyYXRpb25cbiAgICAgICBjb25zdCBhY3Rpb25CYXIgPSBhd2FpdCAkKCd+QWN0aW9uIEJhcicpO1xuICAgICAgICBhd2FpdCBleHBlY3QoYWN0aW9uQmFyKS50b0JlRXhpc3RpbmcoKTtcblxuICAgIH0pXG5cbiAgICBpdChcIkZpbmQgZWxlbWVudCBieSBjbGFzcyBuYW1lXCIsIGFzeW5jKCk9PntcbiAgICAgICAgY29uc3QgY2xhc3NOYW1lID0gYXdhaXQgJCgnYW5kcm9pZC53aWRnZXQuVGV4dFZpZXcnKVxuICAgICAgICBjb25zb2xlLmxvZyhhd2FpdCBjbGFzc05hbWUuZ2V0VGV4dCgpKVxuICAgICAgICBhd2FpdCBleHBlY3QoY2xhc3NOYW1lKS50b0hhdmVUZXh0KFwiQVBJIERlbW9zXCIpXG4gICAgfSlcblxuICAgIGl0KFwiRmluZCBlbGVtZW50IGJ5IHhwYXRoXCIsIGFzeW5jKCk9PntcbiAgICAgICAgYXdhaXQgJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0Vmlld1tAY29udGVudC1kZXNjPVwiQWxlcnQgRGlhbG9nc1wiXScpLmNsaWNrKClcbiAgICAgICAgYXdhaXQgJCgnLy9hbmRyb2lkLndpZGdldC5CdXR0b25bQHJlc291cmNlLWlkPVwiaW8uYXBwaXVtLmFuZHJvaWQuYXBpczppZC9zZWxlY3RfYnV0dG9uXCJdJykuY2xpY2soKVxuICAgICAgICBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LlRleHRWaWV3W0B0ZXh0PVwiQ29tbWFuZCB0d29cIl0nKS5jbGljaygpXG4gICAgICAgIGNvbnN0IHRleHRBc3NlcmF0aW9uID0gYXdhaXQgJCgnLy9hbmRyb2lkLndpZGdldC5UZXh0VmlldycpO1xuICAgICAgICBhd2FpdCBleHBlY3QodGV4dEFzc2VyYXRpb24pLnRvSGF2ZVRleHQoXCJZb3Ugc2VsZWN0ZWQ6IDEgLCBDb21tYW5kIHR3b1wiKTtcbiAgICB9KVxuXG4gICAgaXQoJ0ZpbmQgZWxlbWVudCBieSBVaUF1dG9tYXRvcnMnLCBhc3luYygpID0+e1xuICAgICAgICBhd2FpdCAkKCdhbmRyb2lkPW5ldyBVaVNlbGVjdG9yKCkudGV4dENvbnRhaW5zKFwiQWxlcnRcIiknKS5jbGljaygpXG4gICAgfSlcblxuICAgIGl0Lm9ubHkoXCJXb3JraW5nIHdpdGggdGV4dCBpbnB1dCBmZWlsZFwiLCBhc3luYygpPT57XG4gICAgICAgIGNvbnN0IGFkZE9wdGlvbiA9IGF3YWl0ICQoJ35WaWV3cycpO1xuICAgICAgICBhd2FpdCBhZGRPcHRpb24uY2xpY2soKTtcblxuICAgICAgICBjb25zdCBhZGRPcHRpb25BdXRvID0gYXdhaXQgJCgnfkF1dG8gQ29tcGxldGUnKTtcbiAgICAgICAgYXdhaXQgYWRkT3B0aW9uQXV0by5jbGljaygpO1xuXG4gICAgICAgIGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuVGV4dFZpZXdbQGNvbnRlbnQtZGVzYz1cIjEuIFNjcmVlbiBUb3BcIl0nKS5jbGljaygpXG5cbiAgICAgICAgY29uc3QgY291bnRyeUlucHV0ID0gYXdhaXQgJCgnYW5kcm9pZC53aWRnZXQuRWRpdFRleHQnKTtcbiAgICAgICAgYXdhaXQgY291bnRyeUlucHV0LndhaXRGb3JEaXNwbGF5ZWQoeyB0aW1lb3V0OiA1MDAwIH0pO1xuICAgICAgICBhd2FpdCBjb3VudHJ5SW5wdXQuY2xpY2soKTtcblxuICAgICAgICBhd2FpdCBjb3VudHJ5SW5wdXQuc2V0VmFsdWUoXCJJbmRpYVwiKTtcblxuICAgICAgICBjb25zdCBlbnRlcmVkVGV4dCA9IGF3YWl0IGNvdW50cnlJbnB1dC5nZXRUZXh0KCk7XG4gICAgICAgIGF3YWl0IGV4cGVjdChlbnRlcmVkVGV4dCkudG9FcXVhbChcIkluZGlhXCIpO1xuXG4gICAgfSlcbn0pIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxDQUFDLHdCQUF3QixFQUFDLE1BQUk7RUFDbENDLEVBQUUsQ0FBQyxrQ0FBa0MsRUFBRSxZQUFTO0lBQzdDO0lBQ0MsTUFBTUMsU0FBUyxHQUFHLE1BQU1DLENBQUMsQ0FBQyxNQUFNLENBQUM7SUFDakM7SUFDQSxNQUFNRCxTQUFTLENBQUNFLEtBQUssQ0FBQyxDQUFDO0lBQ3hCO0lBQ0EsTUFBTUMsU0FBUyxHQUFHLE1BQU1GLENBQUMsQ0FBQyxhQUFhLENBQUM7SUFDdkMsTUFBTUcsTUFBTSxDQUFDRCxTQUFTLENBQUMsQ0FBQ0UsWUFBWSxDQUFDLENBQUM7RUFFMUMsQ0FBQyxDQUFDO0VBRUZOLEVBQUUsQ0FBQyw0QkFBNEIsRUFBRSxZQUFTO0lBQ3RDLE1BQU1PLFNBQVMsR0FBRyxNQUFNTCxDQUFDLENBQUMseUJBQXlCLENBQUM7SUFDcERNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLE1BQU1GLFNBQVMsQ0FBQ0csT0FBTyxDQUFDLENBQUMsQ0FBQztJQUN0QyxNQUFNTCxNQUFNLENBQUNFLFNBQVMsQ0FBQyxDQUFDSSxVQUFVLENBQUMsV0FBVyxDQUFDO0VBQ25ELENBQUMsQ0FBQztFQUVGWCxFQUFFLENBQUMsdUJBQXVCLEVBQUUsWUFBUztJQUNqQyxNQUFNRSxDQUFDLENBQUMsMERBQTBELENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7SUFDM0UsTUFBTUQsQ0FBQyxDQUFDLGlGQUFpRixDQUFDLENBQUNDLEtBQUssQ0FBQyxDQUFDO0lBQ2xHLE1BQU1ELENBQUMsQ0FBQyxnREFBZ0QsQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQztJQUNqRSxNQUFNUyxjQUFjLEdBQUcsTUFBTVYsQ0FBQyxDQUFDLDJCQUEyQixDQUFDO0lBQzNELE1BQU1HLE1BQU0sQ0FBQ08sY0FBYyxDQUFDLENBQUNELFVBQVUsQ0FBQywrQkFBK0IsQ0FBQztFQUM1RSxDQUFDLENBQUM7RUFFRlgsRUFBRSxDQUFDLDhCQUE4QixFQUFFLFlBQVU7SUFDekMsTUFBTUUsQ0FBQyxDQUFDLGdEQUFnRCxDQUFDLENBQUNDLEtBQUssQ0FBQyxDQUFDO0VBQ3JFLENBQUMsQ0FBQztFQUVGSCxFQUFFLENBQUNhLElBQUksQ0FBQywrQkFBK0IsRUFBRSxZQUFTO0lBQzlDLE1BQU1DLFNBQVMsR0FBRyxNQUFNWixDQUFDLENBQUMsUUFBUSxDQUFDO0lBQ25DLE1BQU1ZLFNBQVMsQ0FBQ1gsS0FBSyxDQUFDLENBQUM7SUFFdkIsTUFBTVksYUFBYSxHQUFHLE1BQU1iLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQztJQUMvQyxNQUFNYSxhQUFhLENBQUNaLEtBQUssQ0FBQyxDQUFDO0lBRTNCLE1BQU1ELENBQUMsQ0FBQywwREFBMEQsQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQztJQUUzRSxNQUFNYSxZQUFZLEdBQUcsTUFBTWQsQ0FBQyxDQUFDLHlCQUF5QixDQUFDO0lBQ3ZELE1BQU1jLFlBQVksQ0FBQ0MsZ0JBQWdCLENBQUM7TUFBRUMsT0FBTyxFQUFFO0lBQUssQ0FBQyxDQUFDO0lBQ3RELE1BQU1GLFlBQVksQ0FBQ2IsS0FBSyxDQUFDLENBQUM7SUFFMUIsTUFBTWEsWUFBWSxDQUFDRyxRQUFRLENBQUMsT0FBTyxDQUFDO0lBRXBDLE1BQU1DLFdBQVcsR0FBRyxNQUFNSixZQUFZLENBQUNOLE9BQU8sQ0FBQyxDQUFDO0lBQ2hELE1BQU1MLE1BQU0sQ0FBQ2UsV0FBVyxDQUFDLENBQUNDLE9BQU8sQ0FBQyxPQUFPLENBQUM7RUFFOUMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["describe","it","appOption","$","click","actionBar","expect","toBeExisting","className","console","log","getText","toHaveText","textAsseration","only","addOption","addOptionAuto","countryInput","waitForDisplayed","timeout","setValue","enteredText","toEqual"],"sourceRoot":"/Users/admin/mobile/test/specs/","sources":["android-findElements.spec.js"],"sourcesContent":["describe('Android Elements Tests',()=>{\n    it('Find element by accessibility id', async()=>{\n       //find element by accessibility id\n        const appOption = await $('~App');\n        //click on element\n        await appOption.click()\n       //asseration\n       const actionBar = await $('~Action Bar');\n        await expect(actionBar).toBeExisting();\n\n    })\n\n    it(\"Find element by class name\", async()=>{\n        const className = await $('android.widget.TextView')\n        console.log(await className.getText())\n        await expect(className).toHaveText(\"API Demos\")\n    })\n\n    it(\"Find element by xpath\", async()=>{\n        await $('//android.widget.TextView[@content-desc=\"Alert Dialogs\"]').click()\n        await $('//android.widget.Button[@resource-id=\"io.appium.android.apis:id/select_button\"]').click()\n        await $('//android.widget.TextView[@text=\"Command two\"]').click()\n        const textAsseration = await $('//android.widget.TextView');\n        await expect(textAsseration).toHaveText(\"You selected: 1 , Command two\");\n    })\n\n    it('Find element by UiAutomators', async() =>{\n        await $('android=new UiSelector().textContains(\"Alert\")').click()\n    })\n\n    it.only(\"Working with text input feild\", async()=>{\n        const addOption = await $('~Views');\n        await addOption.click();\n\n        const addOptionAuto = await $('~Auto Complete');\n        await addOptionAuto.click();\n\n        await $('//android.widget.TextView[@content-desc=\"1. Screen Top\"]').click()\n\n        const countryInput = await $('android.widget.EditText');\n        await countryInput.waitForDisplayed({ timeout: 5000 });\n        await countryInput.click();\n\n        await countryInput.setValue(\"India\");\n\n        const enteredText = await countryInput.getText();\n        await expect(enteredText).toEqual(\"India\");\n\n    })\n})"],"mappings":"AAAAA,QAAQ,CAAC,wBAAwB,EAAC,MAAI;EAClCC,EAAE,CAAC,kCAAkC,EAAE,YAAS;IAC7C;IACC,MAAMC,SAAS,GAAG,MAAMC,CAAC,CAAC,MAAM,CAAC;IACjC;IACA,MAAMD,SAAS,CAACE,KAAK,CAAC,CAAC;IACxB;IACA,MAAMC,SAAS,GAAG,MAAMF,CAAC,CAAC,aAAa,CAAC;IACvC,MAAMG,MAAM,CAACD,SAAS,CAAC,CAACE,YAAY,CAAC,CAAC;EAE1C,CAAC,CAAC;EAEFN,EAAE,CAAC,4BAA4B,EAAE,YAAS;IACtC,MAAMO,SAAS,GAAG,MAAML,CAAC,CAAC,yBAAyB,CAAC;IACpDM,OAAO,CAACC,GAAG,CAAC,MAAMF,SAAS,CAACG,OAAO,CAAC,CAAC,CAAC;IACtC,MAAML,MAAM,CAACE,SAAS,CAAC,CAACI,UAAU,CAAC,WAAW,CAAC;EACnD,CAAC,CAAC;EAEFX,EAAE,CAAC,uBAAuB,EAAE,YAAS;IACjC,MAAME,CAAC,CAAC,0DAA0D,CAAC,CAACC,KAAK,CAAC,CAAC;IAC3E,MAAMD,CAAC,CAAC,iFAAiF,CAAC,CAACC,KAAK,CAAC,CAAC;IAClG,MAAMD,CAAC,CAAC,gDAAgD,CAAC,CAACC,KAAK,CAAC,CAAC;IACjE,MAAMS,cAAc,GAAG,MAAMV,CAAC,CAAC,2BAA2B,CAAC;IAC3D,MAAMG,MAAM,CAACO,cAAc,CAAC,CAACD,UAAU,CAAC,+BAA+B,CAAC;EAC5E,CAAC,CAAC;EAEFX,EAAE,CAAC,8BAA8B,EAAE,YAAU;IACzC,MAAME,CAAC,CAAC,gDAAgD,CAAC,CAACC,KAAK,CAAC,CAAC;EACrE,CAAC,CAAC;EAEFH,EAAE,CAACa,IAAI,CAAC,+BAA+B,EAAE,YAAS;IAC9C,MAAMC,SAAS,GAAG,MAAMZ,CAAC,CAAC,QAAQ,CAAC;IACnC,MAAMY,SAAS,CAACX,KAAK,CAAC,CAAC;IAEvB,MAAMY,aAAa,GAAG,MAAMb,CAAC,CAAC,gBAAgB,CAAC;IAC/C,MAAMa,aAAa,CAACZ,KAAK,CAAC,CAAC;IAE3B,MAAMD,CAAC,CAAC,0DAA0D,CAAC,CAACC,KAAK,CAAC,CAAC;IAE3E,MAAMa,YAAY,GAAG,MAAMd,CAAC,CAAC,yBAAyB,CAAC;IACvD,MAAMc,YAAY,CAACC,gBAAgB,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;IACtD,MAAMF,YAAY,CAACb,KAAK,CAAC,CAAC;IAE1B,MAAMa,YAAY,CAACG,QAAQ,CAAC,OAAO,CAAC;IAEpC,MAAMC,WAAW,GAAG,MAAMJ,YAAY,CAACN,OAAO,CAAC,CAAC;IAChD,MAAML,MAAM,CAACe,WAAW,CAAC,CAACC,OAAO,CAAC,OAAO,CAAC;EAE9C,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1703960320283},"{\"assumptions\":{},\"sourceRoot\":\"/Users/admin/mobile/test/specs/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/admin/mobile\",\"filename\":\"/Users/admin/mobile/test/specs/android-native.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/admin/mobile\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.20:test":{"value":{"code":"describe('Android Native Feature Tests', () => {\n  it('Access an Activity directly', async () => {\n    await driver.startActivity(\"io.appium.android.apis\", \"io.appium.android.apis.app.AlertDialogSamples\");\n    await expect($('//*[@text=\"App/Alert Dialogs\"]')).toExist();\n  });\n  it('Vertical Scrolling', async () => {\n    await $('~App').click();\n    await $('~Activity').click();\n    //Scroll to the end(not stable if element gets moved)\n    //await $('android=new UiScollable(new UiSelector().scrollable(true)).scrollToEnd(1,5)');\n\n    //ScrollTextIntoView - more stable\n    await $('android=new UiScrollable(new UiSelector().scrollable(true)).scrollTextIntoView(\"Secure Surfaces\")').click();\n\n    //await $('~Secure Surfaces').click()\n\n    //asseration\n    await expect($('~Secure Dialog')).toExist();\n  });\n  it.only('Horizontal Scrolling', async () => {\n    await driver.startActivity(\"io.appium.android.apis\", \"io.appium.android.apis.view.Gallery1\");\n\n    //Horizontal Scrolling\n    await $('android=new UiScrollable(new UiSelector().scrollable(true)).setAsHorizontalList().scrollForward()');\n    await $('android=new UiScrollable(new UiSelector().scrollable(true)).setAsHorizontalList().scrollBackward()');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiZHJpdmVyIiwic3RhcnRBY3Rpdml0eSIsImV4cGVjdCIsIiQiLCJ0b0V4aXN0IiwiY2xpY2siLCJvbmx5Il0sInNvdXJjZVJvb3QiOiIvVXNlcnMvYWRtaW4vbW9iaWxlL3Rlc3Qvc3BlY3MvIiwic291cmNlcyI6WyJhbmRyb2lkLW5hdGl2ZS5zcGVjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImRlc2NyaWJlKCdBbmRyb2lkIE5hdGl2ZSBGZWF0dXJlIFRlc3RzJywgKCk9PntcbiAgICBpdCgnQWNjZXNzIGFuIEFjdGl2aXR5IGRpcmVjdGx5Jyxhc3luYygpPT57XG4gICAgICAgIGF3YWl0IGRyaXZlci5zdGFydEFjdGl2aXR5KFwiaW8uYXBwaXVtLmFuZHJvaWQuYXBpc1wiLFwiaW8uYXBwaXVtLmFuZHJvaWQuYXBpcy5hcHAuQWxlcnREaWFsb2dTYW1wbGVzXCIpO1xuICAgICAgICBhd2FpdCBleHBlY3QoJCgnLy8qW0B0ZXh0PVwiQXBwL0FsZXJ0IERpYWxvZ3NcIl0nKSkudG9FeGlzdCgpO1xuICAgIH0pXG5cbiAgICBpdCgnVmVydGljYWwgU2Nyb2xsaW5nJywgYXN5bmMoKT0+e1xuICAgICAgICBhd2FpdCAkKCd+QXBwJykuY2xpY2soKTtcbiAgICAgICAgYXdhaXQgJCgnfkFjdGl2aXR5JykuY2xpY2soKTtcbiAgICAgICAgLy9TY3JvbGwgdG8gdGhlIGVuZChub3Qgc3RhYmxlIGlmIGVsZW1lbnQgZ2V0cyBtb3ZlZClcbiAgICAgICAgLy9hd2FpdCAkKCdhbmRyb2lkPW5ldyBVaVNjb2xsYWJsZShuZXcgVWlTZWxlY3RvcigpLnNjcm9sbGFibGUodHJ1ZSkpLnNjcm9sbFRvRW5kKDEsNSknKTtcblxuICAgICAgICAvL1Njcm9sbFRleHRJbnRvVmlldyAtIG1vcmUgc3RhYmxlXG4gICAgICAgIGF3YWl0ICQoJ2FuZHJvaWQ9bmV3IFVpU2Nyb2xsYWJsZShuZXcgVWlTZWxlY3RvcigpLnNjcm9sbGFibGUodHJ1ZSkpLnNjcm9sbFRleHRJbnRvVmlldyhcIlNlY3VyZSBTdXJmYWNlc1wiKScpLmNsaWNrKCk7XG5cbiAgICAgICAgLy9hd2FpdCAkKCd+U2VjdXJlIFN1cmZhY2VzJykuY2xpY2soKVxuXG4gICAgICAgIC8vYXNzZXJhdGlvblxuICAgICAgICBhd2FpdCBleHBlY3QoJCgnflNlY3VyZSBEaWFsb2cnKSkudG9FeGlzdCgpO1xuICAgIH0pXG5cbiAgICBpdC5vbmx5KCdIb3Jpem9udGFsIFNjcm9sbGluZycsIGFzeW5jKCk9PntcbiAgICAgICAgYXdhaXQgZHJpdmVyLnN0YXJ0QWN0aXZpdHkoXCJpby5hcHBpdW0uYW5kcm9pZC5hcGlzXCIsXCJpby5hcHBpdW0uYW5kcm9pZC5hcGlzLnZpZXcuR2FsbGVyeTFcIik7XG5cbiAgICAgICAgLy9Ib3Jpem9udGFsIFNjcm9sbGluZ1xuICAgICAgICBhd2FpdCAkKCdhbmRyb2lkPW5ldyBVaVNjcm9sbGFibGUobmV3IFVpU2VsZWN0b3IoKS5zY3JvbGxhYmxlKHRydWUpKS5zZXRBc0hvcml6b250YWxMaXN0KCkuc2Nyb2xsRm9yd2FyZCgpJylcblxuICAgICAgICBhd2FpdCAkKCdhbmRyb2lkPW5ldyBVaVNjcm9sbGFibGUobmV3IFVpU2VsZWN0b3IoKS5zY3JvbGxhYmxlKHRydWUpKS5zZXRBc0hvcml6b250YWxMaXN0KCkuc2Nyb2xsQmFja3dhcmQoKScpXG5cbiAgICB9KVxufSkiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFRLENBQUMsOEJBQThCLEVBQUUsTUFBSTtFQUN6Q0MsRUFBRSxDQUFDLDZCQUE2QixFQUFDLFlBQVM7SUFDdEMsTUFBTUMsTUFBTSxDQUFDQyxhQUFhLENBQUMsd0JBQXdCLEVBQUMsK0NBQStDLENBQUM7SUFDcEcsTUFBTUMsTUFBTSxDQUFDQyxDQUFDLENBQUMsZ0NBQWdDLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUMvRCxDQUFDLENBQUM7RUFFRkwsRUFBRSxDQUFDLG9CQUFvQixFQUFFLFlBQVM7SUFDOUIsTUFBTUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDRSxLQUFLLENBQUMsQ0FBQztJQUN2QixNQUFNRixDQUFDLENBQUMsV0FBVyxDQUFDLENBQUNFLEtBQUssQ0FBQyxDQUFDO0lBQzVCO0lBQ0E7O0lBRUE7SUFDQSxNQUFNRixDQUFDLENBQUMsbUdBQW1HLENBQUMsQ0FBQ0UsS0FBSyxDQUFDLENBQUM7O0lBRXBIOztJQUVBO0lBQ0EsTUFBTUgsTUFBTSxDQUFDQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUMsQ0FBQztFQUMvQyxDQUFDLENBQUM7RUFFRkwsRUFBRSxDQUFDTyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsWUFBUztJQUNyQyxNQUFNTixNQUFNLENBQUNDLGFBQWEsQ0FBQyx3QkFBd0IsRUFBQyxzQ0FBc0MsQ0FBQzs7SUFFM0Y7SUFDQSxNQUFNRSxDQUFDLENBQUMsbUdBQW1HLENBQUM7SUFFNUcsTUFBTUEsQ0FBQyxDQUFDLG9HQUFvRyxDQUFDO0VBRWpILENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["describe","it","driver","startActivity","expect","$","toExist","click","only"],"sourceRoot":"/Users/admin/mobile/test/specs/","sources":["android-native.spec.js"],"sourcesContent":["describe('Android Native Feature Tests', ()=>{\n    it('Access an Activity directly',async()=>{\n        await driver.startActivity(\"io.appium.android.apis\",\"io.appium.android.apis.app.AlertDialogSamples\");\n        await expect($('//*[@text=\"App/Alert Dialogs\"]')).toExist();\n    })\n\n    it('Vertical Scrolling', async()=>{\n        await $('~App').click();\n        await $('~Activity').click();\n        //Scroll to the end(not stable if element gets moved)\n        //await $('android=new UiScollable(new UiSelector().scrollable(true)).scrollToEnd(1,5)');\n\n        //ScrollTextIntoView - more stable\n        await $('android=new UiScrollable(new UiSelector().scrollable(true)).scrollTextIntoView(\"Secure Surfaces\")').click();\n\n        //await $('~Secure Surfaces').click()\n\n        //asseration\n        await expect($('~Secure Dialog')).toExist();\n    })\n\n    it.only('Horizontal Scrolling', async()=>{\n        await driver.startActivity(\"io.appium.android.apis\",\"io.appium.android.apis.view.Gallery1\");\n\n        //Horizontal Scrolling\n        await $('android=new UiScrollable(new UiSelector().scrollable(true)).setAsHorizontalList().scrollForward()')\n\n        await $('android=new UiScrollable(new UiSelector().scrollable(true)).setAsHorizontalList().scrollBackward()')\n\n    })\n})"],"mappings":"AAAAA,QAAQ,CAAC,8BAA8B,EAAE,MAAI;EACzCC,EAAE,CAAC,6BAA6B,EAAC,YAAS;IACtC,MAAMC,MAAM,CAACC,aAAa,CAAC,wBAAwB,EAAC,+CAA+C,CAAC;IACpG,MAAMC,MAAM,CAACC,CAAC,CAAC,gCAAgC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAC/D,CAAC,CAAC;EAEFL,EAAE,CAAC,oBAAoB,EAAE,YAAS;IAC9B,MAAMI,CAAC,CAAC,MAAM,CAAC,CAACE,KAAK,CAAC,CAAC;IACvB,MAAMF,CAAC,CAAC,WAAW,CAAC,CAACE,KAAK,CAAC,CAAC;IAC5B;IACA;;IAEA;IACA,MAAMF,CAAC,CAAC,mGAAmG,CAAC,CAACE,KAAK,CAAC,CAAC;;IAEpH;;IAEA;IACA,MAAMH,MAAM,CAACC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAC/C,CAAC,CAAC;EAEFL,EAAE,CAACO,IAAI,CAAC,sBAAsB,EAAE,YAAS;IACrC,MAAMN,MAAM,CAACC,aAAa,CAAC,wBAAwB,EAAC,sCAAsC,CAAC;;IAE3F;IACA,MAAME,CAAC,CAAC,mGAAmG,CAAC;IAE5G,MAAMA,CAAC,CAAC,oGAAoG,CAAC;EAEjH,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1704005383532},"{\"assumptions\":{},\"sourceRoot\":\"/Users/admin/mobile/test/specs/android/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/admin/mobile\",\"filename\":\"/Users/admin/mobile/test/specs/android/test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/admin/mobile\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.20:test":{"value":{"code":"describe(\"test\", () => {\n  it(\"test\", () => {});\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0Il0sInNvdXJjZVJvb3QiOiIvVXNlcnMvYWRtaW4vbW9iaWxlL3Rlc3Qvc3BlY3MvYW5kcm9pZC8iLCJzb3VyY2VzIjpbInRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVzY3JpYmUoXCJ0ZXN0XCIsKCk9PntcbiAgICBpdChcInRlc3RcIiwoKT0+e1xuICAgICAgICBcbiAgICB9KVxufSkiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFRLENBQUMsTUFBTSxFQUFDLE1BQUk7RUFDaEJDLEVBQUUsQ0FBQyxNQUFNLEVBQUMsTUFBSSxDQUVkLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["describe","it"],"sourceRoot":"/Users/admin/mobile/test/specs/android/","sources":["test.js"],"sourcesContent":["describe(\"test\",()=>{\n    it(\"test\",()=>{\n        \n    })\n})"],"mappings":"AAAAA,QAAQ,CAAC,MAAM,EAAC,MAAI;EAChBC,EAAE,CAAC,MAAM,EAAC,MAAI,CAEd,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1704032574980}}